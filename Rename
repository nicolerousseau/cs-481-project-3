



/*public class Rename {
  /* Command:
rename nameA nameB
Action:
Renames the file nameA to the file nameB.
Use your classes Copy and Delete for this.
Errors:
The user enters:
1. rename The names nameA and nameB are missing.
When there is an error println a message and return (not exit).
*/

/*
  public Rename(String name) {
    f(name);
  }

  private void f(String name)
    {if (name.equals(""))
	  	{System.out.print("No names entered.");
	  	return;}
	 else
	  	{StringTokenizer fileNames = new StringTokenizer(name);
	  	String nameA = fileNames.nextToken();
	  	String nameB = fileNames.nextToken();
	  	if (nameB.equals(""))
	  		{System.out.print("New name not entered.");
	  		return;}
	  	else
	  		{ 		
	  		//copy nameA to nameB using Copy(name)
	  		URI f1=null;
			try {
				f1 = new URI(nameA);
			} catch (URISyntaxException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			Path p1  = Paths.get(f1);
			File fileA = new File(f1);
			if (! fileA.exists())
				{System.out.print("File does not exist");
				return;}
			if (fileA.isDirectory())
				{System.out.print("File is a directory");
				return;}
				
			URI f2=null;
			try {
				f2 = new URI(nameB);
			} catch (URISyntaxException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			Path p2 = Paths.get(f2);
			File fileB = new File(f2);
			if (fileB.exists())
				{System.out.print("Destination already exists");
				return;}			
			
	  		try {Files.copy(p1, p2, COPY_ATTRIBUTES);} 
	  			catch (IOException e) 
	  			{// TODO Auto-generated catch block
	  			e.printStackTrace();}
	  		
	  		//delete nameA using Delete(nameA)
	  		try {
				Files.delete(p1);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	  	*/	
	  		
import java.io.*;

public class Rename
{
  /* Command:
rename nameA nameB
Action:
Renames the file nameA to the file nameB.
Use your classes Copy and Delete for this.
Errors:
The user enters:
1. rename The names nameA and nameB are missing.
When there is an error println a message and return (not exit).
*/
private final String PROG = "rename";
public Rename(String argv)
{
f(argv);
}
private void perror(String msg)
{
System.err.println(PROG + ": " + msg);
}
private void f(String argv)
{
String[] args = argv.split("\\p{Space}+");
if (args.length != 2)
{
System.err.println("usage: " + PROG + " source dest");
return;
}
//new MyCopy(argv);
//new Delete(args[0]);
File f1 = new File(args[0]);
if (!f1.exists())
{
perror("file '" + f1 + "' not found");
return;
}
File f2 = new File(args[1]);
if (!f1.renameTo(f2))
perror("failed to rename file");
}
}
